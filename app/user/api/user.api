syntax = "v1"

info(
	author: "Loocor"
	email: "loocor@gmail.com"
	title: "accout"
	desc: "accout management for agent server"
)

type Profile {
	Id         int64  `json:"id, optional"`
	Kind       int64  `json:"kind, options=0|1|2|3|4"`
	Role       string `json:"role, optional"`
	Phone      string `json:"phone"`
	Name       string `json:"name"`
	Nickname   string `json:"nickname, optional"`
	Gender     string `json:"gender"`
	OpenId     string `json:"openId, optional"`
	From       string `json:"from"`
	Password   string `json:"password"`
	IdNumber   string `json:"idNumber"`
	Organize   string `json:"organize, optional"`
	Department string `json:"department, optional"`
	JobTitle   string `json:"jobTitle, optional"`
	Avatar     string `json:"avatar, optional"`
	Address    string `json:"address, optional"`
	CreateTime int64  `json:"createTime, optional"`
	UpdateTime int64  `json:"updateTime, optional"`
	DeleteTime int64  `json:"deleteTime, optional"`
}

type AuthToken {
	AccessToken  string `json:"accessToken"`
	AccessExpire int64  `json:"accessExpire"`
	RefreshAfter int64  `json:"refreshAfter"`
}

type (
	RegReq {
		Captcha string  `json:"captcha"`
		Profile Profile `json:"profile"`
	}

	RegResp {
		Code    int32     `json:"code"`
		Message string    `json:"message"`
		Token   AuthToken `json:"token"`
	}

	LoginReq {
		Phone    string `json:"phone"`
		Password string `json:"password"`
		Captcha  string `json:"captcha"`
	}

	LoginResp {
		Code    int32     `json:"code"`
		Message string    `json:"message"`
		Token   AuthToken `json:"token"`
	}

	LogoutReq {
		Phone string `json:"phone"`
	}

	LogoutResp {
		Code    int32  `json:"code"`
		Message string `json:"message"`
	}

	ProfileViewReq {
		Phone string `json:"phone"`
	}

	ProfileViewResp {
		Code    int32   `json:"code"`
		Message string  `json:"message"`
		Profile Profile `json:"profile"`
	}

	ProfileUpdateReq {
		Profile Profile `json:"profile"`
	}

	ProfileUpdateResp {
		Code    int32  `json:"code"`
		Message string `json:"message"`
	}
)

service user-api {
	@doc(summary: "AuthToken")
	@handler AuthHandler
	post /api/v1/auth () returns (AuthToken)
}

@server(
	jwt: Auth
)

service user-api {
	@doc(summary: "Reg")
	@handler RegHandler
	post /api/v1/user/reg (RegReq) returns (RegResp)
	
	@doc(summary: "Login")
	@handler LoginHandler
	post /api/v1/user/login (LoginReq) returns (LoginResp)
	
	@doc(summary: "Logout")
	@handler LogoutHandler
	post /api/v1/user/logout (LogoutReq) returns (LogoutResp)
}

@server(
	jwt: Auth
	middleware: UserCheck
)

service user-api {
	@doc(summary: "Profile view")
	@handler ProfileViewHandler
	get /api/v1/user/profile (ProfileViewReq) returns (ProfileViewResp)
	
	@doc(summary: "Profile update")
	@handler ProfileUpdateHandler
	post /api/v1/user/profile (ProfileUpdateReq) returns (ProfileUpdateResp)
}