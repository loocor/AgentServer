// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package server

import (
	"context"

	"agent/app/user/service/internal/logic"
	"agent/app/user/service/internal/svc"
	"agent/app/user/service/user"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) Reg(ctx context.Context, in *user.RegReq) (*user.RegResp, error) {
	l := logic.NewRegLogic(ctx, s.svcCtx)
	return l.Reg(in)
}

func (s *UserServer) Login(ctx context.Context, in *user.LoginReq) (*user.LoginResp, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *UserServer) Logout(ctx context.Context, in *user.LogoutReq) (*user.LogoutResp, error) {
	l := logic.NewLogoutLogic(ctx, s.svcCtx)
	return l.Logout(in)
}

func (s *UserServer) ProfileView(ctx context.Context, in *user.ProfileViewReq) (*user.ProfileViewResp, error) {
	l := logic.NewProfileViewLogic(ctx, s.svcCtx)
	return l.ProfileView(in)
}

func (s *UserServer) ProfileUpdate(ctx context.Context, in *user.ProfileUpdateReq) (*user.ProfileUpdateResp, error) {
	l := logic.NewProfileUpdateLogic(ctx, s.svcCtx)
	return l.ProfileUpdate(in)
}
